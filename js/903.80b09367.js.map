{"version":3,"file":"js/903.80b09367.js","mappings":"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","sources":["webpack://btc-vue/./src/views/Detail.vue","webpack://btc-vue/./src/views/Detail.vue?4d6c"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <!-- 标题栏，带返回按钮 -->\n    <div class=\"title-bar\">\n      <button @click=\"goBack\">返回</button>\n      <h1>{{ name }} - USDT</h1>\n    </div>\n    <!-- 图表容器 -->\n    <div ref=\"chartContainer\" id=\"main\" style=\"width: 100%; height: 600px\"></div>\n    <button @click=\"realTimeData\">今日实时数据</button>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport * as echarts from \"echarts\";\n\nexport default {\n  myChart: null, // 用于存储 ECharts 实例，类似成员变量\n\n  data() {\n    // 响应式的数据\n    return {\n      // echats 实例不使用响应式变量接收。不能在这里声明\n      // myChart: null,  // 用于存储 ECharts 实例\n      name: \"BTC-USDT\", // 定义组件的名称\n      symbol: \"BTC-USDT\",\n      upColor: \"#ec0000\", // K线涨的颜色\n      upBorderColor: \"#8A0000\", // K线涨的边框颜色\n      downColor: \"#00da3c\", // K线跌的颜色\n      downBorderColor: \"#008F28\", // K线跌的边框颜色\n      data0: null, // 股票数据\n      categoryData: [], // 存储日期\n      values: [], // 存储K线数据\n    };\n  },\n\n  created() {},\n\n  mounted() {\n    // this.initChart(); // 在组件挂载时初始化图表\n    // 所有参数都在route里面\n    console.log(this.$route);\n    var symbol = this.$route.params.symbol || this.$route.query.symbol;\n    this.symbol = symbol;\n    this.name = this.$route.params.symbolName || this.$route.query.symbolName;\n    // 这里是对的\n    console.log(\"name:\", this.name);\n    // 如果没有获取到 symbol，提供一个默认值\n    if (!symbol) {\n      console.error(\"Symbol 未找到，使用默认值 BTCUSDT\");\n      symbol = \"BTCUSDT\"; // 默认值\n    }\n    this.fetchDataAndInitChart(symbol);\n\n    // 添加 resize 事件监听\n    window.addEventListener(\"resize\", this.resizeChart);\n  },\n\n  beforeUnmount() {\n    // 清除 resize 事件监听\n    window.removeEventListener(\"resize\", this.resizeChart);\n  },\n\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    // 获取数据并初始化图表\n    fetchDataAndInitChart(symbol) {\n      const apiUrl = `https://data-api.binance.vision/api/v3/uiKlines?symbol=${symbol}&interval=1d&limit=365`;\n      console.log(\"apiUrl: \", apiUrl);\n      axios\n        .get(apiUrl)\n        .then((response) => {\n          this.data0 = response.data;\n          const processedData = this.splitData(this.data0); // 拆分数据\n          this.categoryData = processedData.categoryData; // 赋值日期数据\n          this.values = processedData.values; // 赋值K线数据\n          this.initChart(this.name + \"-USDT\"); // 初始化图表\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n\n    // 拆分数据\n    // splitData(rawData) {\n    //   const categoryData = []; // 存储日期\n    //   const values = []; // 存储K线数据\n    //   for (let i = 0; i < rawData.length; i++) {\n    //     categoryData.push(rawData[i][0]); // 使用slice代替splice，保留原数组\n    //     values.push(rawData[i].slice(1)); // 剩余的开盘价、收盘价、最低价、最高价放入values\n    //     // values.push([rawData[i][1], rawData[i][2], rawData[i][3], rawData[i][4]]); // 确保格式 [开盘价, 收盘价, 最低价, 最高价]\n    //   }\n    //   return {\n    //     categoryData,\n    //     values,\n    //   };\n    // },\n    splitData(rawData) {\n      const categoryData = []; // 存储日期\n      const values = []; // 存储K线数据\n      for (let i = 0; i < rawData.length; i++) {\n        const item = rawData[i];\n        categoryData.push(new Date(item[0]).toLocaleString()); // 把时间戳转为可读日期格式\n        // 确保格式 [开盘价, 收盘价, 最低价, 最高价]\n        values.push([\n          parseFloat(item[1]), // 开盘价\n          parseFloat(item[4]), // 收盘价\n          parseFloat(item[3]), // 最低价\n          parseFloat(item[2]), // 最高价\n        ]);\n      }\n      return {\n        categoryData,\n        values,\n      };\n    },\n\n    // 初始化ECharts图表\n    initChart(name) {\n      console.log(\"initChart\");\n      // 确保categoryData和values都有有效数据\n      if (!this.categoryData.length || !this.values.length) {\n        console.error(\"数据未加载完成或无效\");\n        return;\n      }\n\n      const chartDom = this.$refs.chartContainer; // 使用ref来获取DOM节点\n      this.myChart = echarts.init(chartDom, null, {\n        renderer: \"canvas\",\n        useDirtyRect: false,\n      }); // 初始化图表\n\n      const option = {\n        title: {\n          text: name, // 'BTC-USDT'\n          left: 0,\n        },\n        tooltip: {\n          // 如果这里设置了axis，那么其他的tooltip设置会不生效\n          trigger: \"item\", // 鼠标悬浮时显示提示框，\n          axisPointer: {\n            type: \"cross\", // 显示十字指针\n          },\n        },\n        legend: {\n          data: [\"日K\"], // 图例，显示K线和各均线\n          selectedMode: \"multiple\", // 图例的选择模式，可以是 'single' 或 'multiple'，防止数据丢失\n        },\n        grid: {\n          left: \"10%\",\n          right: \"10%\",\n          bottom: \"15%\",\n        },\n        xAxis: {\n          type: \"category\", // X轴为类别轴，使用日期数据\n          data: this.categoryData, // 日期数据\n          boundaryGap: false, // 紧贴边界\n          axisLine: { onZero: false }, // Y轴不与X轴重合\n          splitLine: { show: false }, // 不显示网格线\n          min: \"dataMin\", // X轴最小值\n          max: \"dataMax\", // X轴最大值\n        },\n        yAxis: {\n          scale: true, // Y轴刻度\n          splitArea: {\n            show: true, // 显示Y轴的网格区域\n          },\n        },\n        dataZoom: [\n          {\n            type: \"inside\", // 内部缩放\n            start: 50, // 初始的显示区域\n            end: 100,\n          },\n          {\n            show: true,\n            type: \"slider\", // 显示滑动条\n            top: \"90%\",\n            start: 50,\n            end: 100,\n          },\n        ],\n        series: [\n          {\n            name: \"日K\",\n            type: \"candlestick\", // K线图\n            data: this.values, // K线图数据\n            itemStyle: {\n              color: this.upColor,\n              color0: this.downColor,\n              borderColor: this.upBorderColor,\n              borderColor0: this.downBorderColor,\n            },\n            markPoint: {\n              // 标记点（如最高价、最低价）\n              label: {\n                formatter: function (param) {\n                  return param != null ? Math.round(param.value) + \"\" : \"\";\n                },\n              },\n              data: [\n                {\n                  name: \"Mark\",\n                  coord: [\"2013/5/31\", 2300], // 一个标记点\n                  value: 2300,\n                  itemStyle: {\n                    color: \"rgb(41,60,85)\",\n                  },\n                },\n                {\n                  name: \"最高\", // highest value\n                  type: \"max\",\n                  valueDim: \"highest\",\n                },\n                {\n                  name: \"最低\", // lowest value\n                  type: \"min\",\n                  valueDim: \"lowest\",\n                },\n                {\n                  name: \"收盘均价\", // 收盘均价 average value on close\n                  type: \"average\",\n                  valueDim: \"close\",\n                },\n              ],\n              tooltip: {\n                formatter: function (param) {\n                  // 使用箭头函数，这样可以正确访问 this\n                  console.log(\"jjjj11111\");\n                  return param.name + \"<br>\" + (param.data.coord || \"\");\n                },\n              },\n            },\n          },\n        ],\n      };\n\n      this.myChart.setOption(option); // 使用配置项生成图表\n      this.window.addEventListener(\"resize\", () => {\n        console.log(\"jjjjj resize\");\n        this.myChart.resize(); // 当窗口大小变化时，自动调整图表大小\n      });\n    },\n\n    realTimeData() {\n      // 使用 Vue Router 导航到新页面，并传递 `item` 数据\n      this.$router.push({\n        path: \"/realTime\",\n        query: {\n          name: this.name,\n          symbol: this.symbol,\n        },\n      });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#container {\n  background-color: aqua;\n  min-height: 100vh;\n  /* 确保容器至少占据整个视口的高度 */\n}\n\n.hello {\n  background-color: #f5f5f5;\n  min-height: 100vh;\n  padding: 10px;\n}\n\n.title-bar {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.title-bar button {\n  margin-right: 15px;\n  padding: 5px 10px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 4px;\n}\n\n.title-bar h1 {\n  margin: 0;\n  font-size: 24px;\n  color: #333;\n}\n</style>\n","import { render } from \"./Detail.vue?vue&type=template&id=2923b16d&scoped=true\"\nimport script from \"./Detail.vue?vue&type=script&lang=js\"\nexport * from \"./Detail.vue?vue&type=script&lang=js\"\n\nimport \"./Detail.vue?vue&type=style&index=0&id=2923b16d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2923b16d\"]])\n\nexport default __exports__"],"names":["class","ref","id","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","goBack","_toDisplayString","$data","name","_hoisted_3","realTimeData","myChart","data","symbol","upColor","upBorderColor","downColor","downBorderColor","data0","categoryData","values","created","mounted","console","log","this","$route","params","query","symbolName","error","fetchDataAndInitChart","window","addEventListener","resizeChart","beforeUnmount","removeEventListener","methods","$router","go","apiUrl","axios","get","then","response","processedData","splitData","initChart","catch","rawData","i","length","item","push","Date","toLocaleString","parseFloat","chartDom","$refs","chartContainer","echarts","renderer","useDirtyRect","option","title","text","left","tooltip","trigger","axisPointer","type","legend","selectedMode","grid","right","bottom","xAxis","boundaryGap","axisLine","onZero","splitLine","show","min","max","yAxis","scale","splitArea","dataZoom","start","end","top","series","itemStyle","color","color0","borderColor","borderColor0","markPoint","label","formatter","param","Math","round","value","coord","valueDim","setOption","resize","path","__exports__","render"],"sourceRoot":""}